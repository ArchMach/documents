Relay-Version: version B 2.10 5/3/83; site utzoo.UUCP
Posting-Version: Notesfiles $Revision: 1.6.2.16 $; site mirror.UUCP
Path: utzoo!watmath!clyde!burl!ulysses!allegra!mit-eddie!genrad!panda!talcott!harvard!think!mirror!rs
From: rs@mirror.UUCP
Newsgroups: net.sources
Subject: phase of the moon
Message-ID: <12100002@mirror.UUCP>
Date: Fri, 17-May-85 14:48:00 EDT
Article-I.D.: mirror.12100002
Posted: Fri May 17 14:48:00 1985
Date-Received: Thu, 23-May-85 04:31:26 EDT
Lines: 228
Nf-ID: #N:mirror:12100002:000:5061
Nf-From: mirror!rs    May 17 14:48:00 1985




The recent posting by Robert Bond with the sunrise/sunset
programs led me to dig out this old chestnut that had been
floating around MIT for a while.  It /seems/ correct to
me, but I ain't no "loup-garou" :-)

--------
Rich $alz{ mit-eddie, ihnp4!inmet, wjh12, cca, datacube } ! mirror!rs
Mirror Systems
2067 Massachusetts Ave."I've seen this happen
Cambridge, MA, 02140 in other people's lives
617-661-0777 and now it's happening in mine."

# -----------------CUT HERE---------------------
#!/bin/sh
# This is a shell archive.  Remove anything before this line,
# then unpack it by saving it in a file and typing "sh file".
#
# Wrapped by mirror!rs on Fri May 17 14:38:21 EDT 1985
# Contents:  pom.c
 
echo x - pom.c
sed 's/^XX//' > "pom.c" <<'@//E*O*F pom.c//'
XX/*$The phase of the moon, for your safety and convenience.
XX**
XX**  Stolen from ArchMach & converted from PL/I by Brian Hess.
XX**  Extensively cleaned up by Rich $alz.
XX**
XX**  If you can figure out how this program works, then YOU deserve
XX**  to be working on it, sucker!  Here's a hint:  The epoch is 13:23,
XX**  10/1/78.
XX*/


XX#include <math.h>
XX#include <sys/types.h>
XX#include <time.h>


XX/* Globals. */
XXlong Day;
XXlong Hour;
XXlong Minute;
XXdouble Fraction;
XXchar*Moon[] =
XX{
XX    "new",
XX    "first quarter of the",
XX    "full moon",
XX    "last quarter of the"
XX};


XX/* Linked in later. */
XXchar*rindex();
XXtime_t time();
XXstruct tm*localtime();


XX#define LINES24
XX#define WIDTH80
XX#define CENTER((WIDTH - 2 * LINES) / 2)
XX#define BRIGHT'@'
XX#define LEDGE'('
XX#define REDGE')'
XX#define FULL0.5
XX#define TwoPi(2 * 3.14159)
XX#define ZERO0.03

XX#define Plural(X)if (X != 1) printf("s");
XX/*!*/
XXlong
XXCalculate()
XX{
XX    register struct tm*tm;
XX    register long Length;
XX    register long Phase;
XX    register long DeltaH;
XX    register long Delta;
XX    register long offset;
XX    time_t tick;
XX    long julian;
XX    long year;
XX    long hour;
XX    long minute;

XX    tick= time((time_t *)0);
XX    tm= localtime(&tick);
XX    julian= tm->tm_yday + 1;
XX    year= tm->tm_year - 78;
XX    hour= tm->tm_hour;
XX    minute= tm->tm_min;

XX    Length= (double)2551 / 60 * 1000 + (double)443 / 60;
XX    offset= ((year * 365L + julian) * 24L + hour) * 60L + minute;
XX    Delta= offset - (273L * 24L + 13L) * 60L + 23L;
XX    Phase= Delta - (Delta / Length) * Length;

XX    Fraction= Phase / Length;

XX    Length= Length / 4;
XX    Phase= Phase / Length;
XX    Delta= Delta - (Delta / Length) * Length;
XX    DeltaH= Delta / 60;
XX    Minute= Delta - DeltaH * 60;
XX    Day= DeltaH / 24;
XX    Hour= DeltaH - Day * 24;
XX    return(Phase);
XX}
XX/*!*/
XXint
XXCharPos(x)
XX    doublex;
XX{
XX    register inti;

XX    i = x * LINES + 0.5;
XX    if ((i += LINES + CENTER) < 1)
XXi = 1;
XX    return(i);
XX}


XXvoid
XXDraw()
XX{
XX    register char*p;
XX    register int i;
XX    register int end;
XX    register double y;
XX    register double cht;
XX    register double squisher;
XX    register double horizon;
XX    register double terminator;
XX    char Buffer[256];

XX    /* Clear screen? */

XX    if (Fraction < FULL)
XXsquisher = cos(TwoPi * Fraction);
XX    else
XXsquisher = cos(TwoPi * (Fraction - FULL));

XX    cht = (double)2.0 / (LINES - 6.0);
XX    for (y = 0.93; y > -1.0; y -= cht)
XX    {
XXfor (i = sizeof Buffer, p = Buffer; --i >= 0; )
XX    *p++ = ' ';
XXhorizon = sqrt(1.0 - y * y);
XXBuffer[    CharPos(-horizon)]= LEDGE;
XXBuffer[i = CharPos( horizon)]= REDGE;
XXBuffer[++i]= '\0';
XXterminator = horizon * squisher;
XXif (Fraction > ZERO && Fraction < (1.0 - ZERO))
XX{
XX    if (Fraction < FULL)
XX    {
XXi   = CharPos( terminator);
XXend = CharPos( horizon);
XX    }
XX    else
XX    {
XXi   = CharPos(-horizon);
XXend = CharPos( terminator);
XX    }
XX    while (i <= end)
XXBuffer[i++] = BRIGHT;
XX}
XXprintf(" %s\n", Buffer);
XX    }
XX}
XX/*!*/
XXmain(ac)
XX    int ac;
XX{
XX    register long Phase;

XX    Phase = Calculate();
XX    if (ac == 1)
XXDraw();

XX    printf("\nIt is ");
XX    if (Day == 0 && Hour == 0 && Minute == 0)
XXprintf("exactly");
XX    else
XX    {
XXif (Day)
XX{
XX    printf("%ld day", Day);
XX    Plural(Day);
XX    if (Hour | Day)
XXprintf(", ");
XX}
XXif (Hour)
XX{
XX    printf("%ld hour", Hour);
XX    Plural(Hour);
XX    if (Minute)
XXprintf(", ");
XX}
XXif (Minute)
XX{
XX    printf("%ld minute", Minute);
XX    Plural(Minute);
XX}
XXprintf(" since");
XX    }
XX    printf(" the %s moon.\n", Moon[Phase]);

XX    exit(0);
XX}
@//E*O*F pom.c//
chmod u=rw,g=rw,o=r pom.c
 
echo Inspecting for damage in transit...
temp=/tmp/shar$$; dtemp=/tmp/.shar$$
trap "rm -f $temp $dtemp; exit" 0 1 2 3 15
cat > $temp <<\!!!
     188     565    3569 pom.c
!!!
wc  pom.c | sed 's=[^ ]*/==' | diff -b $temp - >$dtemp
if [ -s $dtemp ]
then echo "Ouch [diff of wc output]:" ; cat $dtemp
else echo "No problems found."
fi
exit 0
